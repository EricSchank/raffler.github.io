{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Colors.svelte","../../src/DataEntryView.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/motion/index.mjs","../../src/RaffleView.svelte","../../node_modules/idb/build/esm/wrap-idb-value.js","../../node_modules/idb/build/esm/index.js","../../src/storage.svelte","../../src/LoadingView.svelte","../../src/SavingView.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script context=\"module\">\n    const colors = [\n        '#f44336',\n        '#9C27B0',\n        '#3F51B5',\n        '#2196F3',\n        '#009688',\n        '#4CAF50',\n        '#FF9800',\n        '#795548',\n        '#607D8B'\n    ];\n    export function color(idx) {\n        return colors[idx % colors.length];\n    }\n</script>\n\n<span></span>\n","<script>\n    import { color } from './Colors.svelte';\n\n    export let items = [];\n\n\tlet nextId = 2;\n\tfunction onRemove(e) {\n\t\tconst idx = this.getAttribute('idx');\n\t\titems.splice(idx, 1);\n\t\titems = items;\n\t}\n\tfunction onCreated(node) {\n\t\tnode.focus();\n\t}\n\tfunction onAdd(e) {\n\t\titems.push('');\n\t\titems = items;\n\t\tnextId += 1;\n\t}\n\tfunction onKeyUp(e) {\n\t\tif (e.key === 'Enter') {\n\t\t\tonAdd();\n\t\t}\n    }\n    function isDupe(item) {\n        const entries = items.filter((el) => {\n            return  el.trim() == item.trim();\n        });\n        return entries.length > 1;\n    }\n</script>\n\n<style>\n\t:global(ul) {\n\t\tlist-style-type: none;\n\t\tpadding-inline-start: 0;\n\t}\n\tinput {\n\t\twidth: 250px;\n\t}\n\t.material-icons {\n\t\tcolor: #FFF;\n\t}\n\t:global(.borderless .material-icons) {\n\t\tfont-size: 24px;\n\t\tvertical-align: middle;\n\t}\n\t:global(.borderless) {\n\t\tborder: none;\n\t\tborder-radius: 50%;\n\t}\n\tinput + .borderless {\n\t\tmargin-left: 12px;\n\t\tvertical-align: bottom;\n\t}\n\t.borderless.add {\n\t\tmargin-top: 12px;\n\t}\n</style>\n\n<ul>\n    {#each items as item, i (i)}\n        <li>\n            <input bind:value={item} on:keyup={onKeyUp} use:onCreated style=\"color: {color(i)}; border-color: {isDupe(item) ? 'red' : ''};\"/>\n            <button class=\"borderless\" idx={i} on:click={onRemove}>\n                <i class=\"material-icons\">remove_circle_outline</i>\n            </button>\n        </li>\n    {/each}\n\n    <li>\n        <button on:click={onAdd} class=\"borderless add\">\n            <i class=\"material-icons\">add_circle_outline</i>\n        </button>\n    </li>\n</ul>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script>\n    import { color } from './Colors.svelte';\n    import { onMount } from 'svelte';\n    import { tweened } from 'svelte/motion';\n\timport { bounceInOut, sineOut } from 'svelte/easing';\n\n    export let enteringData;\n    export let items = [];\n\n    import { fade, fly, slide, scale, draw } from 'svelte/transition';\n\n    let raffleItems = [];\n\tlet raffleFont = 36;\n\tlet winner;\n\tlet opacities = tweened([]);\n\n    onMount(async () => {\n        raffleItems = [];\n\t\traffleItems = items.map((val, idx) => { return {idx: idx, val: val};});\n\n\t\tlet opc = Array(items.length);\n\t\topc.fill(10000.0);\n\t\tconsole.log('opc', opc);\n\t\topacities = tweened(opc);\n\t\tconsole.log('opc', opc);\n\t\twinner = undefined;\n\t\tif (raffleItems.length > 60) {\n\t\t\traffleFont = 12;\n\t\t}\n\t\tif (raffleItems.length > 40) {\n\t\t\traffleFont = 24;\n\t\t}\n\t\tif (raffleItems.length > 20) {\n\t\t\traffleFont = 36;\n\t\t}\n\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!makePick()) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 2000);\n    });\n\n\tfunction onEnterData(e) {\n\t\tenteringData = true;\n\t\traffleItems = [];\n\t}\n\n\tfunction makePick() {\n\t\tif (raffleItems.length > 1) {\n\t\t\tconst idx = Math.floor((Math.random() * raffleItems.length));\n\t\t\tconsole.log('pick', idx);\n\t\t\tconst rem = raffleItems.splice(idx, 1);\n\t\t\tconsole.log('removed', rem);\n\t\t\tconsole.log('raff', raffleItems);\n\t\t\tconsole.log('opac', $opacities);\n\t\t\topacities.update(o => {o[rem[0].idx] = 1000.0; console.log('inner opac', o); return o;});\n\t\t\traffleItems = raffleItems;\n\t\t\tif (raffleItems.length > 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\twinner = raffleItems[0].val;\n\t\treturn false;\n\t}\n\n</script>\n<style>\n\t.raffle-items {\n\t\tmargin-top: 20px;\n\t}\n\t.raffle-item {\n\t\tcolor: #FFF;\n\t\tmargin: 20px;\n\t\tdisplay: inline-block;\n\t\tfont-size: 36px;\n\t\tborder-radius: 1em;\n\t\tpadding: 0.4em 0.9em;\n\t\tbox-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\n\t}\n\t.winner {\n\t\tfont-size: 36px;\n\t\tmargin: 10px;\n\t}\n</style>\n\n<button class=\"regular\" on:click={onEnterData}>\n    <i class=\"material-icons\">arrow_back</i>\n    Back\n</button>\n\n<div class=\"winner\">\n    {#if winner}\n        The winner is... <strong>{winner}</strong>\n    {:else}\n        &nbsp;\n    {/if}\n</div>\n\n<div class=\"raffle-items\">\n    {#each items as item, i (i)}\n        <div class=\"raffle-item\" style=\"background-color: {color(i)}; opacity: { 1.0 * $opacities[i] / 10000.0};\">\n            {item}\n        </div>\n    {/each}\n</div>\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        const returnVal = target[targetFuncName](...args);\n        if (isWrite)\n            await tx.done;\n        return returnVal;\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","<script context=\"module\">\n    import { openDB, deleteDB } from 'idb';\n\n    async function getDB() {\n        let db = await openDB('raffle-store', 1, {\n            upgrade(db) {\n                const raffles = db.createObjectStore('raffles', {\n                    keyPath: 'name'\n                });\n                raffles.createIndex('name', 'name');\n            },\n        });\n        return db;\n    }\n\n    export async function raffles() {\n        const db = await getDB();\n        return await db.getAllFromIndex('raffles', 'name');\n    }\n\n    export async function removeRaffle(name) {\n        const db = await getDB();\n        return await db.delete('raffles', name);\n    }\n\n    export async function addRaffle(name, items) {\n        const db = await getDB();\n        return await db.add('raffles', {\n            name: name,\n            items: items,\n            date: Date.now()\n        });\n    }\n\n</script>","<script>\n\timport * as db from './storage.svelte';\n    import { onMount } from 'svelte';\n\n    export let items = [];\n    export let loading;\n    let saves = [];\n    let error = '';\n    console.log(items);\n\n\tonMount(async () => {\n        saves = await db.raffles();\n        if (saves.length < 1) {\n            error = 'Found no saved raffles'\n        }\n\t});\n\n    function onCancel() {\n        loading = false;\n    }\n\n    async function onRemove(e) {\n        const idx = this.getAttribute('idx');\n        const remove = saves.splice(idx, 1);\n        const r = await db.removeRaffle(remove[0].name);\n        saves = saves;\n    }\n\n    async function onLoad(e) {\n        const idx = this.getAttribute('idx');\n        items = saves[idx].items;\n        loading = false;\n    }\n\n</script>\n\n<style>\n\t.borderless {\n\t\t/* margin-top: 12px; */\n        background: none;\n        box-shadow: none;\n        color: #333;\n        margin-bottom: 0;\n\t}\n\n    tr {\n        background: #EEE;\n    }\n\n    tr.odd {\n        background: #d7f1c7;\n    }\n\n    table {\n        table-layout: fixed;\n        border-collapse: collapse;\n    }\n    td, th {\n        padding: 0 20px;\n        font-size: 22px;\n        text-align: left;\n    }\n    td.icon, th.icon {\n        padding: 0;\n    }\n    td.icon i {\n        vertical-align: baseline;\n    }\n</style>\n\n<h3>Open a saved raffle</h3>\n\n{#if error}\n    <h4>{error}</h4>\n{:else}\n\n    <table>\n        <thead>\n            <th>Name</th>\n            <th>Date</th>\n            <th class=\"icon\">&nbsp;</th>\n            <th class=\"icon\">&nbsp;</th>\n        </thead>\n        {#each saves as save, i (i)}\n            <tr class:odd={((i % 2) == 1)} title={`${save.items.length} items in '${save.name}' raffle`}>\n                <td>\n                    {save.name}\n                </td>\n                <td>\n                    {new Date(save.date).toDateString()}\n                </td>\n                <td class=\"icon\" title=\"Load '{save.name}' raffle\">\n                    <button on:click={onLoad} idx={i} class=\"borderless\">\n                        <i class=\"material-icons material-icons-two-tone\">folder_open</i>\n                    </button>\n                </td>\n                <td class=\"icon\" title=\"Delete '{save.name}' raffle\">\n                    <button class=\"borderless remove\" idx={i} on:click={onRemove}>\n                        <i class=\"material-icons\">remove_circle_outline</i>\n                    </button>\n                </td>\n            </tr>        \n        {/each}\n    </table>\n{/if}\n\n<button class=\"regular\" on:click={onCancel}>\n    <i class=\"material-icons\">arrow_back</i>&nbsp; Cancel\n</button>\n","<script>\n\timport * as db from './storage.svelte';\n\n    export let items = [];\n    export let saving;\n    let name = '';\n    let error = '';\n    console.log(items);\n\n    function onCancel() {\n        saving = false;\n    }\n\n    async function onSave() {\n        if (!name || name.length < 1) {\n            error = 'It needs a name';\n        }\n        const r = await db.raffles();\n        if (! await db.addRaffle(name, items)) {\n            error = 'That name has already been used'\n        } else {\n            saving = false;\n        }\n    }\n\n    function onKeyUp() {\n        error = '';\n    }\n</script>\n\n<style>\n</style>\n\n<h3>Save these raffle items</h3>\n\n<h4>{error}</h4>\n<div>\n    <strong>Raffle Name:</strong> <input bind:value={name} on:keyUp={onKeyUp}/>\n</div>\n\n<button class=\"regular\" on:click={onSave}>\n    <i class=\"material-icons\">save_alt</i>&nbsp; Save\n</button>\n\n<button class=\"regular\" on:click={onCancel}>\n    <i class=\"material-icons\">arrow_back</i>&nbsp; Cancel\n</button>\n","<svelte:head>\n\t<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n</svelte:head>\n\n<script>\n\timport DataEntryView from './DataEntryView.svelte';\n\timport RaffleView from './RaffleView.svelte';\n\timport LoadingView from './LoadingView.svelte';\n\timport SavingView from './SavingView.svelte';\n\n\tlet items = [''];\n\tlet enteringData = true;\n\tlet saving = false;\n\tlet loading = false;\n\t$: validItems = items.filter(i => {return (i && i.length > 0);});\n\t$: canSave = (validItems.length);\n\n\tfunction onStart(e) {\n\t\tconsole.log('validItems', validItems);\n\t\tenteringData = false;\n\t}\n\n    function onLoad() {\n\t\tloading = true;\n    }\n\n    function onSave() {\n\t\tsaving = true;\n    }\n\n\t// Storage\n\n</script>\n\n<style>\n\t:global(body) {\n\t\tmargin: auto 3rem;\n\t}\n\t:global(.regular) {\n\t\tfont-size: 24px;\n\t\tborder-radius: 1em;\n\t\tpadding: 0.4em 0.9em;\n\t\tmargin-top: 20px;\n\t}\n\t:global(.regular .material-icons) {\n\t\tfont-size: 26px;\n\t\tvertical-align: text-bottom;\n\t}\n\t:global(button) {\n\t\tbackground-color: #676778;\n\t\tcolor: #FFF;\n\t\tbox-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\n\t}\n\n\tbutton + button {\n\t\tmargin-left: 20px;\n\t}\n\n\th1 img {\n\t\theight: 25px;\n\t}\n\n</style>\n\n<h1><img src=\"favicon.png\" alt=\"logo\"/>Raffler</h1>\n\n{#if enteringData}\n\n\t{#if loading}\n\t\t<LoadingView bind:items bind:loading />\n\t{:else if saving}\n\t\t<SavingView items={validItems} bind:saving/>\n\t{:else}\n\t\t<DataEntryView bind:items />\n\n\t\t<button on:click={onStart} class=\"regular\">\n\t\t\t<i class=\"material-icons\">shuffle</i>&nbsp; Start\n\t\t</button>\n\n\t\t<button on:click={onLoad} class=\"regular\">\n\t\t\t<i class=\"material-icons\">folder_open</i>&nbsp; Open\n\t\t</button>\n\n\t\t<button on:click={onSave} class=\"regular\" disabled={!canSave}>\n\t\t\t<i class=\"material-icons\">save_alt</i>&nbsp; Save\n\t\t</button>\n\n\t{/if}\n\n{:else}\n\t<RaffleView bind:enteringData items={validItems}> </RaffleView>\n\n{/if}\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","undefined","bound","create_component","mount_component","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","callbacks","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","indexOf","splice","colors","color","idx","action_result","onCreated","focus","items","nextId","onAdd","e","item","el","trim","subscriber_queue","is_date","obj","prototype","toString","call","get_interpolator","isArray","arr","bi","t","getTime","delta","keys","interpolators","result","tweened","defaults","store","start","stop","subscribers","new_value","run_queue","s","subscribe","invalidate","subscriber","writable","target_value","opts","previous_task","started","delay","duration","easing","linear","interpolate","promise","fulfill","loop","abort","elapsed","unsub","unsubscribe","winner","enteringData","raffleItems","opacities","val","opc","console","log","interval","setInterval","floor","random","rem","$opacities","makePick","clearInterval","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","storeNames","tx","sort","transformCachableValue","done","reject","unlisten","complete","error","DOMException","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","request","success","catch","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","shift","returnVal","getDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","db","openDB","createObjectStore","keyPath","createIndex","raffles","getAllFromIndex","date","toDateString","loading","saves","db.raffles","remove","db.removeRaffle","oldTraps","saving","db.addRaffle","validItems","canSave","body"],"mappings":"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"}